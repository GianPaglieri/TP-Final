// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaginaRedSocial.Data;

#nullable disable

namespace PaginaRedSocial.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230201213822_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PaginaRedSocial.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaComentario")
                        .HasColumnType("datetime");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios", (string)null);
                });

            modelBuilder.Entity("PaginaRedSocial.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .HasColumnType("longtext");

                    b.Property<string>("Fecha")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contenido = "Juan",
                            Fecha = "12/12/1222",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PaginaRedSocial.Models.PostTag", b =>
                {
                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("TagId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Palabra")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("PaginaRedSocial.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Intentos")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Dni")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bloqueado = false,
                            Dni = 45454,
                            Email = "aaa",
                            Intentos = 0,
                            IsAdmin = false,
                            Nombre = "Juan",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Bloqueado = false,
                            Dni = 123123,
                            Email = "aaa",
                            Intentos = 0,
                            IsAdmin = true,
                            Nombre = "Juan",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("PaginaRedSocial.Models.UsuarioAmigo", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("AmigoId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "AmigoId");

                    b.HasIndex("AmigoId");

                    b.ToTable("UsuarioAmigo");
                });

            modelBuilder.Entity("PaginaRedSocial.Reaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TipoReaccionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TipoReaccionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reacciones", (string)null);
                });

            modelBuilder.Entity("PaginaRedSocial.TipoReaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Palabra")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoReacciones", (string)null);
                });

            modelBuilder.Entity("PaginaRedSocial.Models.Comentario", b =>
                {
                    b.HasOne("PaginaRedSocial.Models.Post", "Post")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaginaRedSocial.Models.User", "Usuario")
                        .WithMany("MisComentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.Post", b =>
                {
                    b.HasOne("PaginaRedSocial.Models.User", "user")
                        .WithMany("posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.PostTag", b =>
                {
                    b.HasOne("PaginaRedSocial.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaginaRedSocial.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.UsuarioAmigo", b =>
                {
                    b.HasOne("PaginaRedSocial.Models.User", "Amigo")
                        .WithMany("amigosMios")
                        .HasForeignKey("AmigoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PaginaRedSocial.Models.User", "Usuario")
                        .WithMany("misAmigos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Amigo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PaginaRedSocial.Reaccion", b =>
                {
                    b.HasOne("PaginaRedSocial.Models.Post", "Post")
                        .WithMany("Reacciones")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaginaRedSocial.TipoReaccion", "TipoReaccion")
                        .WithMany("Reacciones")
                        .HasForeignKey("TipoReaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaginaRedSocial.Models.User", "User")
                        .WithMany("MisReacciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("TipoReaccion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.Post", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("PostTags");

                    b.Navigation("Reacciones");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.Tag", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("PaginaRedSocial.Models.User", b =>
                {
                    b.Navigation("MisComentarios");

                    b.Navigation("MisReacciones");

                    b.Navigation("amigosMios");

                    b.Navigation("misAmigos");

                    b.Navigation("posts");
                });

            modelBuilder.Entity("PaginaRedSocial.TipoReaccion", b =>
                {
                    b.Navigation("Reacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
